{"version":3,"file":"static/js/663.86df2787.chunk.js","mappings":"iLAKA,MA0HA,EA1HsBA,KACpB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAiBC,IAAsBF,EAAAA,EAAAA,UAAS,KAChDG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,GACjCK,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,KAER,MAAM,KAAEC,GAASC,EAAAA,EAASC,KAAKC,mBAAkBC,MAAOC,EAAOC,KAC/C,qBAAVD,GAEFE,QAAQC,IAAI,qCACd,IAGF,MAAO,KACLR,EAAKS,aAAaC,aAAa,CAChC,GACA,IAuCH,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sFAAqFC,UAClGC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4BAA2BC,SAAA,EACxCC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yDAAwDC,SAAC,yBAGvEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,yCAAwCC,SAAC,8CAIxDC,EAAAA,EAAAA,MAAA,QACEF,UAAU,iBACVG,SApCoBX,UAG1B,GAFAY,EAAEC,iBAdE3B,IAAaG,GACfyB,EAAAA,GAAMC,MAAM,0BACL,KAGL7B,EAAS8B,OAAS,KACpBF,EAAAA,GAAMC,MAAM,0CACL,GAST,CAEAvB,GAAW,GACX,IACE,MAAM,MAAEuB,SAAgBlB,EAAAA,EAASC,KAAKmB,WAAW,CAC/C/B,SAAUA,IAGZ,GAAI6B,EAAO,MAAMA,EAEjBD,EAAAA,GAAMI,QAAQ,+BACdzB,EAAS,IACX,CAAE,MAAOsB,GACPZ,QAAQY,MAAM,wBAAyBA,GACvCD,EAAAA,GAAMC,MAAMA,EAAMI,SAAW,2BAC/B,CAAC,QACC3B,GAAW,EACb,CAjB2B,CAiB3B,EAgBoCiB,SAAA,EAE9BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,mCAAkCC,SAAA,EAC/CC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOa,QAAQ,WAAWZ,UAAU,UAASC,SAAC,kBAG9CF,EAAAA,EAAAA,KAAA,SACEc,GAAG,WACHC,KAAK,WACLC,KAAK,WACLC,UAAQ,EACRC,UAAW,EACXjB,UAAU,2NACVkB,YAAY,eACZC,MAAOzC,EACP0C,SAAWhB,GAAMzB,EAAYyB,EAAEiB,OAAOF,aAG1CjB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOa,QAAQ,mBAAmBZ,UAAU,UAASC,SAAC,0BAGtDF,EAAAA,EAAAA,KAAA,SACEc,GAAG,mBACHC,KAAK,kBACLC,KAAK,WACLC,UAAQ,EACRC,UAAW,EACXjB,UAAU,2NACVkB,YAAY,uBACZC,MAAOtC,EACPuC,SAAWhB,GAAMtB,EAAmBsB,EAAEiB,OAAOF,gBAKnDpB,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,UACEgB,KAAK,SACLO,SAAUvC,EACViB,UAAU,uPAAsPC,SAE/PlB,EAAU,eAAiB,4BAKhC,C","sources":["pages/ResetPassword.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../config/supabase';\nimport toast from 'react-hot-toast';\nimport { useNavigate } from 'react-router-dom';\n\nconst ResetPassword = () => {\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Check for password reset token in URL\n    const { data } = supabase.auth.onAuthStateChange(async (event, session) => {\n      if (event === 'passwordRecovery') {\n        // User is in password recovery mode\n        console.log('Password recovery session detected');\n      }\n    });\n\n    return () => {\n      data.subscription.unsubscribe();\n    };\n  }, []);\n\n  const validateForm = () => {\n    if (password !== confirmPassword) {\n      toast.error('Passwords do not match');\n      return false;\n    }\n\n    if (password.length < 6) {\n      toast.error('Password must be at least 6 characters');\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleResetPassword = async (e) => {\n    e.preventDefault();\n    \n    if (!validateForm()) return;\n\n    setLoading(true);\n    try {\n      const { error } = await supabase.auth.updateUser({\n        password: password\n      });\n\n      if (error) throw error;\n\n      toast.success('Password reset successfully');\n      navigate('/');\n    } catch (error) {\n      console.error('Password reset error:', error);\n      toast.error(error.message || 'Failed to reset password');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n            Reset Your Password\n          </h2>\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\n            Enter a new password for your account\n          </p>\n        </div>\n        <form \n          className=\"mt-8 space-y-6\" \n          onSubmit={handleResetPassword}\n        >\n          <div className=\"rounded-md shadow-sm -space-y-px\">\n            <div>\n              <label htmlFor=\"password\" className=\"sr-only\">\n                New Password\n              </label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                required\n                minLength={6}\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-green-500 focus:border-green-500 focus:z-10 sm:text-sm\"\n                placeholder=\"New Password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </div>\n            <div>\n              <label htmlFor=\"confirm-password\" className=\"sr-only\">\n                Confirm New Password\n              </label>\n              <input\n                id=\"confirm-password\"\n                name=\"confirmPassword\"\n                type=\"password\"\n                required\n                minLength={6}\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-green-500 focus:border-green-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Confirm New Password\"\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              />\n            </div>\n          </div>\n\n          <div>\n            <button\n              type=\"submit\"\n              disabled={loading}\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 disabled:opacity-50\"\n            >\n              {loading ? 'Resetting...' : 'Reset Password'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"],"names":["ResetPassword","password","setPassword","useState","confirmPassword","setConfirmPassword","loading","setLoading","navigate","useNavigate","useEffect","data","supabase","auth","onAuthStateChange","async","event","session","console","log","subscription","unsubscribe","_jsx","className","children","_jsxs","onSubmit","e","preventDefault","toast","error","length","updateUser","success","message","htmlFor","id","name","type","required","minLength","placeholder","value","onChange","target","disabled"],"sourceRoot":""}