{"version":3,"file":"static/js/229.7651f171.chunk.js","mappings":"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","sources":["components/admin/AdminLayout.jsx","components/admin/ProductModal.jsx","pages/admin/Products.jsx","utils/currency.js"],"sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst AdminLayout = ({ children }) => {\n  const location = useLocation();\n\n  const navItems = [\n    {\n      path: '/admin',\n      name: 'Dashboard',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" />\n        </svg>\n      )\n    },\n    {\n      path: '/admin/orders',\n      name: 'Orders',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z\" />\n        </svg>\n      )\n    },\n    {\n      path: '/admin/products',\n      name: 'Products',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\" />\n        </svg>\n      )\n    },\n    {\n      path: '/admin/users',\n      name: 'Users',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z\" />\n        </svg>\n      )\n    },\n    {\n      path: '/admin/sales-dashboard',\n      name: 'Sales Dashboard',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 11V7a4 4 0 118 0v4m-1 4h-6m6 0a2 2 0 11-4 0m4 0a2 2 0 11-4 0m-4 0H5m6 0a2 2 0 11-4 0m4 0a2 2 0 11-4 0\" />\n        </svg>\n      )\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 flex\">\n      {/* Sidebar */}\n      <div className=\"w-64 bg-white shadow-lg\">\n        <div className=\"h-16 bg-green-700 flex items-center px-6\">\n          <span className=\"text-white text-lg font-semibold\">Admin Panel</span>\n        </div>\n        <nav className=\"mt-6\">\n          {navItems.map((item) => (\n            <Link\n              key={item.path}\n              to={item.path}\n              className={`flex items-center px-6 py-3 text-gray-700 hover:bg-gray-100 ${\n                location.pathname === item.path ? 'bg-gray-100 border-r-4 border-green-700' : ''\n              }`}\n            >\n              {item.icon}\n              <span className=\"mx-3\">{item.name}</span>\n            </Link>\n          ))}\n          <Link\n            to=\"/\"\n            className=\"flex items-center px-6 py-3 text-gray-700 hover:bg-gray-100 mt-4\"\n          >\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n            </svg>\n            <span className=\"mx-3\">Back to Site</span>\n          </Link>\n        </nav>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"flex-1\">\n        {/* Top Navigation */}\n        <div className=\"bg-white shadow-sm h-16 flex items-center px-8\">\n          <div className=\"flex-1\"></div>\n          <div className=\"flex items-center space-x-4\">\n            <span className=\"text-gray-700\">Admin</span>\n          </div>\n        </div>\n\n        {/* Page Content */}\n        <div className=\"p-8\">\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminLayout; ","import React, { useState, useEffect } from 'react';\nimport { supabase } from '../../config/supabase';\nimport toast from 'react-hot-toast';\n\nconst CATEGORIES = [\n  'Whole Spices',\n  'Ground Spices',\n  'Blended Spices',\n  'Herbs',\n  'Seeds',\n  'Dried Chillies',\n  'Other'\n];\n\nconst ProductModal = ({ isOpen, onClose, product, onSuccess }) => {\n  const [categories, setCategories] = useState([]);\n  const [newCategory, setNewCategory] = useState('');\n  const [formData, setFormData] = useState({\n    name: '',\n    description: '',\n    price: '',\n    category: '',\n    image_url: '',\n    stock: '',\n  });\n  const [loading, setLoading] = useState(false);\n  const [imageFile, setImageFile] = useState(null);\n  const [imagePreview, setImagePreview] = useState('');\n\n  const formatPriceINR = (price) => {\n    return new Intl.NumberFormat('en-IN', { style: 'currency', currency: 'INR' }).format(price);\n  };\n\n  useEffect(() => {\n    if (product) {\n      setFormData({\n        name: product.name || '',\n        description: product.description || '',\n        price: product.price ? product.price.toString() : '',\n        category: product.category || '',\n        image_url: product.image_url || '',\n        stock: product.stock ? product.stock.toString() : '',\n      });\n      setImagePreview(product.image_url || '');\n    } else {\n      resetForm();\n    }\n  }, [product]);\n\n  const resetForm = () => {\n    setFormData({\n      name: '',\n      description: '',\n      price: '',\n      category: '',\n      image_url: '',\n      stock: '',\n    });\n    setImageFile(null);\n    setImagePreview('');\n  };\n\n  const handleImageChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setImageFile(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagePreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const uploadImage = async (file) => {\n    try {\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${Math.random()}.${fileExt}`;\n      const filePath = fileName;\n\n      const { error: uploadError, data } = await supabase.storage\n        .from('product-images')\n        .upload(filePath, file, {\n          cacheControl: '3600',\n          upsert: true\n        });\n\n      if (uploadError) throw uploadError;\n\n      const { data: { publicUrl }, error: urlError } = supabase.storage\n        .from('product-images')\n        .getPublicUrl(filePath);\n\n      if (urlError) throw urlError;\n\n      return publicUrl;\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      toast.error('Failed to upload image');\n      return null;\n    }\n  };\n\n  const fetchCategories = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('categories')\n        .select('name')\n        .order('name');\n      \n      if (error) throw error;\n      setCategories(data.map(cat => cat.name));\n    } catch (error) {\n      toast.error('Error fetching categories');\n      console.error('Categories fetch error:', error);\n    }\n  };\n\n  const handleAddCategory = async () => {\n    if (!newCategory.trim()) {\n      toast.error('Category name cannot be empty');\n      return;\n    }\n\n    try {\n      const { data, error } = await supabase\n        .from('categories')\n        .insert({ name: newCategory.trim() })\n        .select('name');\n      \n      if (error) {\n        if (error.code === '23505') {\n          toast.error('This category already exists');\n        } else {\n          throw error;\n        }\n      } else {\n        toast.success(`Category \"${newCategory}\" added`);\n        setCategories([...categories, newCategory.trim()]);\n        setNewCategory('');\n        setFormData(prev => ({ ...prev, category: newCategory.trim() }));\n      }\n    } catch (error) {\n      toast.error('Failed to add category');\n      console.error('Add category error:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      // Validate required fields\n      if (!formData.name || !formData.price || !formData.category) {\n        toast.error('Please fill in all required fields');\n        setLoading(false);\n        return;\n      }\n\n      // Upload image if a new file is selected\n      let imageUrl = formData.image_url;\n      if (imageFile) {\n        imageUrl = await uploadImage(imageFile);\n        if (!imageUrl) {\n          setLoading(false);\n          return;\n        }\n      }\n\n      // Prepare product data\n      const productData = {\n        name: formData.name,\n        description: formData.description,\n        price: parseFloat(formData.price),\n        category: formData.category,\n        image_url: imageUrl,\n        stock: parseInt(formData.stock) || 0,\n      };\n\n      if (product) {\n        // Update existing product\n        const { error } = await supabase\n          .from('products')\n          .update(productData)\n          .eq('id', product.id);\n        if (error) throw error;\n        toast.success('Product updated successfully');\n      } else {\n        // Add new product\n        const { error } = await supabase\n          .from('products')\n          .insert([productData]);\n        if (error) throw error;\n        toast.success('Product added successfully');\n      }\n\n      // Reset form and close modal\n      resetForm();\n      onSuccess();\n      onClose();\n    } catch (error) {\n      console.error('Error saving product:', error);\n      toast.error(error.message || 'Failed to save product');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center\">\n      <div className=\"bg-white rounded-lg max-w-2xl w-full mx-4 overflow-hidden\">\n        <div className=\"px-6 py-4 border-b border-gray-200 flex justify-between items-center\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">\n            {product ? 'Edit Product' : 'Add New Product'}\n          </h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-500\"\n          >\n            <svg className=\"h-6 w-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"p-6\">\n          <div className=\"grid grid-cols-1 gap-6\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Product Name\n              </label>\n              <input\n                type=\"text\"\n                value={formData.name}\n                onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-green-500 focus:border-green-500\"\n                placeholder=\"Enter product name\"\n                required\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Description\n              </label>\n              <textarea\n                value={formData.description}\n                onChange={(e) => setFormData({ ...formData, description: e.target.value })}\n                className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-green-500 focus:border-green-500\"\n                placeholder=\"Enter product description\"\n                rows=\"3\"\n              />\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Price (₹)\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.price}\n                  onChange={(e) => setFormData({ ...formData, price: e.target.value })}\n                  className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-green-500 focus:border-green-500\"\n                  placeholder=\"Enter price\"\n                  min=\"0\"\n                  step=\"0.01\"\n                  required\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Stock Quantity\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.stock}\n                  onChange={(e) => setFormData({ ...formData, stock: e.target.value })}\n                  className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-green-500 focus:border-green-500\"\n                  placeholder=\"Enter stock quantity\"\n                  min=\"0\"\n                />\n              </div>\n            </div>\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Category</label>\n              <div className=\"flex space-x-2\">\n                <select\n                  value={formData.category}\n                  onChange={(e) => setFormData({ ...formData, category: e.target.value })}\n                  className=\"flex-grow p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-green-500\"\n                >\n                  <option value=\"\">Select Category</option>\n                  {categories.map((cat) => (\n                    <option key={cat} value={cat}>{cat}</option>\n                  ))}\n                </select>\n                \n                {/* New Category Input */}\n                <input \n                  type=\"text\"\n                  value={newCategory}\n                  onChange={(e) => setNewCategory(e.target.value)}\n                  placeholder=\"New Category\"\n                  className=\"w-1/3 p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-green-500\"\n                />\n                \n                {/* Add Category Button */}\n                <button \n                  onClick={handleAddCategory}\n                  className=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\"\n                >\n                  Add\n                </button>\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Product Image\n              </label>\n              <div className=\"flex items-center space-x-4\">\n                <input\n                  type=\"file\"\n                  accept=\"image/*\"\n                  onChange={handleImageChange}\n                  className=\"block w-full text-sm text-gray-500 \n                    file:mr-4 file:py-2 file:px-4 \n                    file:rounded-full file:border-0 \n                    file:text-sm file:font-semibold\n                    file:bg-green-50 file:text-green-700\n                    hover:file:bg-green-100\"\n                />\n                {imagePreview && (\n                  <img \n                    src={imagePreview} \n                    alt=\"Product Preview\" \n                    className=\"h-20 w-20 object-cover rounded-md\"\n                  />\n                )}\n              </div>\n            </div>\n\n            <div className=\"mt-6\">\n              <button\n                type=\"submit\"\n                disabled={loading}\n                className=\"w-full bg-green-600 text-white py-2 px-4 rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 transition-colors\"\n              >\n                {loading ? (\n                  <span className=\"flex items-center justify-center\">\n                    <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" />\n                    </svg>\n                    Saving...\n                  </span>\n                ) : (\n                  'Save Product'\n                )}\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductModal;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { supabase } from '../../config/supabase';\nimport { formatPrice } from '../../utils/currency';\nimport toast from 'react-hot-toast';\nimport ProductModal from '../../components/admin/ProductModal';\nimport AdminLayout from '../../components/admin/AdminLayout';\n\nconst AdminProducts = () => {\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [editingProduct, setEditingProduct] = useState(null);\n  const [search, setSearch] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [viewType, setViewType] = useState('list');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(10); // Default to 10 items per page\n\n  useEffect(() => {\n    fetchProducts();\n    checkAdminStatus();\n  }, []);\n\n  const fetchProducts = async () => {\n    try {\n      setLoading(true);\n      const { data, error } = await supabase\n        .from('products')\n        .select('*')\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n      setProducts(data);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      toast.error('Failed to load products');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const checkAdminStatus = async () => {\n    try {\n      // Get the current session\n      const { data: { session } } = await supabase.auth.getSession();\n      \n      if (!session?.user) {\n        setIsAdmin(false);\n        return;\n      }\n\n      const user = session.user;\n\n      // Check if the user is an admin using user_metadata or app_metadata\n      const isAdmin = \n        user.user_metadata?.is_admin === true || \n        user.app_metadata?.is_admin === true;\n\n      setIsAdmin(isAdmin);\n\n      if (!isAdmin) {\n        return;\n      }\n    } catch (error) {\n      setIsAdmin(false);\n      toast.error('Failed to verify admin status');\n    }\n  };\n\n  const handleDelete = async (id) => {\n    if (!window.confirm('Are you sure you want to delete this product?')) return;\n\n    try {\n      const { error } = await supabase\n        .from('products')\n        .delete()\n        .eq('id', id);\n\n      if (error) throw error;\n\n      setProducts(products.filter(product => product.id !== id));\n      toast.success('Product deleted successfully');\n    } catch (error) {\n      console.error('Error deleting product:', error);\n      toast.error('Failed to delete product');\n    }\n  };\n\n  const filteredProducts = products.filter(product =>\n    product.name.toLowerCase().includes(search.toLowerCase()) ||\n    product.description.toLowerCase().includes(search.toLowerCase()) ||\n    product.origin.toLowerCase().includes(search.toLowerCase())\n  );\n\n  const totalPages = Math.ceil(filteredProducts.length / itemsPerPage);\n\n  const getCurrentProducts = () => {\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    return filteredProducts.slice(startIndex, startIndex + itemsPerPage);\n  };\n\n  const handleProductSuccess = () => {\n    fetchProducts();\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-100 p-6\">\n        <div className=\"flex justify-center items-center h-full\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-green-700\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <AdminLayout>\n      <div className=\"min-h-screen bg-gray-100\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"flex justify-between items-center mb-8\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900\">Manage Products</h1>\n              <p className=\"mt-1 text-sm text-gray-500\">\n                Add, edit, and manage your product inventory\n              </p>\n            </div>\n            <button\n              onClick={() => setShowAddModal(true)}\n              className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-green-600 hover:bg-green-700\"\n            >\n              <svg className=\"h-4 w-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n              </svg>\n              Add New Product\n            </button>\n          </div>\n\n          {/* View Type Toggle */}\n          <div className=\"mb-4\">\n            <button\n              onClick={() => setViewType('list')}\n              className={`px-4 py-2 rounded ${viewType === 'list' ? 'bg-green-600 text-white' : 'bg-gray-200'}`}\n            >\n              List View\n            </button>\n            <button\n              onClick={() => setViewType('tiles')}\n              className={`mr-2 px-4 py-2 rounded ${viewType === 'tiles' ? 'bg-green-600 text-white' : 'bg-gray-200'}`}\n            >\n              Tiles View\n            </button>\n          </div>\n\n          {/* Items Per Page Selection */}\n          <div className=\"mb-4\">\n            <label className=\"mr-2\">Items per page:</label>\n            <select\n              value={itemsPerPage}\n              onChange={(e) => {\n                setItemsPerPage(Number(e.target.value));\n                setCurrentPage(1); // Reset to the first page when items per page changes\n              }}\n              className=\"border border-gray-300 rounded-md\"\n            >\n              <option value={5}>5</option>\n              <option value={10}>10</option>\n              <option value={20}>20</option>\n              <option value={50}>50</option>\n            </select>\n          </div>\n\n          {/* Search and Filters */}\n          <div className=\"bg-white rounded-lg shadow p-6 mb-8\">\n            <div className=\"max-w-lg\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Search Products\n              </label>\n              <input\n                type=\"text\"\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n                placeholder=\"Search by name, description, or origin...\"\n                className=\"w-full border-gray-300 rounded-md shadow-sm focus:ring-green-500 focus:border-green-500\"\n              />\n            </div>\n          </div>\n\n          {/* Products Grid */}\n          {viewType === 'tiles' ? (\n            <div className=\"grid grid-cols-5 gap-4\">\n              {getCurrentProducts().map((product, index) => (\n                <div key={product.id} className=\"bg-white rounded-lg shadow-sm overflow-hidden p-2\">\n                  <div className=\"aspect-w-16 aspect-h-9\">\n                    <img\n                      src={product.image_url}\n                      alt={product.name}\n                      className=\"w-full h-32 object-cover\"\n                    />\n                  </div>\n                  <div className=\"p-2\">\n                    <h3 className=\"text-sm font-medium text-gray-900 truncate\">{product.name}</h3>\n                    <div className=\"mt-2 flex items-center justify-between\">\n                      <span className=\"text-sm font-medium text-gray-900\">\n                        {formatPrice(product.price)}\n                      </span>\n                      <span className=\"text-xs text-gray-500\">\n                        Origin: {product.origin}\n                      </span>\n                    </div>\n                    <div className=\"mt-1 text-xs text-gray-500\">\n                      Category: {product.category}\n                    </div>\n                    <div className=\"mt-2 flex space-x-2\">\n                      <button\n                        onClick={() => setEditingProduct(product)}\n                        className=\"flex-1 inline-flex justify-center items-center px-2 py-1 border border-gray-300 shadow-sm text-xs font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n                      >\n                        Edit\n                      </button>\n                      <button\n                        onClick={() => handleDelete(product.id)}\n                        className=\"flex-1 inline-flex justify-center items-center px-2 py-1 border border-transparent text-xs font-medium rounded-md text-white bg-red-600 hover:bg-red-700\"\n                      >\n                        Delete\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">SL No</th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Image</th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Product Name</th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Price</th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Origin</th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Category</th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Stock</th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {getCurrentProducts().map((product, index) => (\n                    <tr key={product.id}>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {(currentPage - 1) * itemsPerPage + index + 1}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <img\n                          src={product.image_url}\n                          alt={product.name}\n                          className=\"w-12 h-12 object-cover rounded\"\n                        />\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{product.name}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{formatPrice(product.price)}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{product.origin}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{product.category}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {product.stock}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                        <button\n                          onClick={() => setEditingProduct(product)}\n                          className=\"text-blue-600 hover:text-blue-900\"\n                        >\n                          Edit\n                        </button>\n                        <button\n                          onClick={() => handleDelete(product.id)}\n                          className=\"text-red-600 hover:text-red-900 ml-4\"\n                        >\n                          Delete\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n          \n          {/* Pagination Controls */}\n          <div className=\"flex justify-between items-center mt-4\">\n            <button\n              onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))}\n              disabled={currentPage === 1}\n              className=\"px-4 py-2 bg-gray-300 rounded disabled:opacity-50\"\n            >\n              Previous\n            </button>\n            <span>Page {currentPage} of {totalPages}</span>\n            <button\n              onClick={() => setCurrentPage((prev) => Math.min(prev + 1, totalPages))}\n              disabled={currentPage === totalPages}\n              className=\"px-4 py-2 bg-gray-300 rounded disabled:opacity-50\"\n            >\n              Next\n            </button>\n          </div>\n        </div>\n\n        {/* Add/Edit Product Modal */}\n        <ProductModal\n          isOpen={showAddModal || editingProduct !== null}\n          onClose={() => {\n            setShowAddModal(false);\n            setEditingProduct(null);\n          }}\n          product={editingProduct}\n          onSuccess={handleProductSuccess}\n        />\n      </div>\n    </AdminLayout>\n  );\n};\n\nexport default AdminProducts; ","export const formatPrice = (price) => {\n  // Format with Indian numbering system and Rupee symbol\n  return new Intl.NumberFormat('en-IN', {\n    style: 'currency',\n    currency: 'INR',\n    maximumFractionDigits: 0,\n  }).format(price);\n}; "],"names":["_ref","children","location","useLocation","navItems","path","name","icon","_jsx","className","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","_jsxs","map","item","Link","to","concat","pathname","isOpen","onClose","product","onSuccess","categories","setCategories","useState","newCategory","setNewCategory","formData","setFormData","description","price","category","image_url","stock","loading","setLoading","imageFile","setImageFile","imagePreview","setImagePreview","useEffect","toString","resetForm","async","data","error","supabase","from","select","order","cat","toast","console","fetchCategories","onClick","onSubmit","e","preventDefault","imageUrl","fileExt","file","split","pop","filePath","Math","random","uploadError","storage","upload","cacheControl","upsert","publicUrl","urlError","getPublicUrl","uploadImage","productData","parseFloat","parseInt","update","eq","id","success","insert","message","type","value","onChange","_objectSpread","target","placeholder","required","rows","min","step","trim","code","prev","accept","files","reader","FileReader","onloadend","result","readAsDataURL","src","alt","disabled","cx","cy","r","AdminProducts","products","setProducts","showAddModal","setShowAddModal","editingProduct","setEditingProduct","search","setSearch","isAdmin","setIsAdmin","viewType","setViewType","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","fetchProducts","checkAdminStatus","ascending","_user$user_metadata","_user$app_metadata","session","auth","getSession","user","user_metadata","is_admin","app_metadata","handleDelete","window","confirm","delete","filter","filteredProducts","toLowerCase","includes","origin","totalPages","ceil","length","getCurrentProducts","startIndex","slice","AdminLayout","Number","index","formatPrice","max","ProductModal","handleProductSuccess","Intl","NumberFormat","style","currency","maximumFractionDigits","format"],"sourceRoot":""}