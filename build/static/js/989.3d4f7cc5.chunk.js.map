{"version":3,"file":"static/js/989.3d4f7cc5.chunk.js","mappings":"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","sources":["pages/Products.jsx","utils/currency.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { supabase } from '../config/supabase';\nimport Navbar from '../components/Navbar';\nimport { formatPrice } from '../utils/currency';\nimport { useCart } from '../context/CartContext';\nimport toast from 'react-hot-toast';\n\nconst ProductDetailsModal = ({ product, onClose, onAddToCart }) => {\n  if (!product) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50\">\n      <div className=\"bg-white rounded-lg shadow-xl p-8 max-w-2xl w-full relative\">\n        <button \n          onClick={onClose} \n          className=\"absolute top-4 right-4 text-gray-600 hover:text-gray-900\"\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n        \n        <div className=\"flex flex-col md:flex-row\">\n          {/* Product Image */}\n          <div className=\"md:w-1/2 mb-4 md:mr-8\">\n            <img \n              src={product.image_url || '/default-product.jpg'} \n              alt={product.name} \n              className=\"w-full h-auto rounded-lg object-cover\"\n            />\n          </div>\n          \n          {/* Product Details */}\n          <div className=\"md:w-1/2\">\n            <h2 className=\"text-2xl font-bold mb-2\">{product.name}</h2>\n            <p className=\"text-gray-600 mb-4\">{product.description}</p>\n            \n            <div className=\"mb-4\">\n              <span className=\"text-xl font-semibold text-green-700\">\n                {formatPrice(product.price)}\n              </span>\n              {product.stock <= 5 && (\n                <span className=\"ml-2 text-red-500 text-sm\">\n                  Only {product.stock} left in stock!\n                </span>\n              )}\n            </div>\n            \n            <div className=\"mb-4\">\n              <strong>Category:</strong> {product.category}\n            </div>\n            \n            <button \n              onClick={() => onAddToCart(product)}\n              disabled={product.stock === 0}\n              className={`w-full py-2 rounded-md text-white font-semibold ${\n                product.stock > 0 \n                  ? 'bg-green-600 hover:bg-green-700' \n                  : 'bg-gray-400 cursor-not-allowed'\n              }`}\n            >\n              {product.stock > 0 ? 'Add to Cart' : 'Out of Stock'}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Products = () => {\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [categories, setCategories] = useState([]);\n  const [filter, setFilter] = useState({\n    category: '',\n    stock: true\n  });\n  const [sortBy, setSortBy] = useState('name-asc');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(8);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const { addToCart } = useCart();\n\n  // Fetch categories from database\n  const fetchCategories = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('categories')\n        .select('name')\n        .order('name');\n      \n      if (error) throw error;\n      setCategories(data.map(cat => cat.name));\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n      toast.error('Failed to load categories');\n    }\n  };\n\n  useEffect(() => {\n    fetchCategories();\n    fetchProducts();\n  }, [filter]);\n\n  const fetchProducts = async () => {\n    try {\n      setLoading(true);\n      \n      // Base query to fetch products\n      let query = supabase\n        .from('products')\n        .select('*');\n\n      // Apply stock filter\n      if (filter.stock) {\n        query = query.gt('stock', 0);\n      }\n\n      // Apply category filter\n      if (filter.category) {\n        query = query.eq('category', filter.category);\n      }\n\n      const { data, error } = await query;\n\n      if (error) throw error;\n\n      setProducts(data);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const filterProducts = (products) => {\n    return products.filter(product => {\n      const categoryMatch = !filter.category || product.category === filter.category;\n      return categoryMatch;\n    });\n  };\n\n  const sortProducts = (products) => {\n    const sortedProducts = [...products];\n    switch (sortBy) {\n      case 'price-asc':\n        return sortedProducts.sort((a, b) => a.price - b.price);\n      case 'price-desc':\n        return sortedProducts.sort((a, b) => b.price - a.price);\n      case 'name-asc':\n        return sortedProducts.sort((a, b) => a.name.localeCompare(b.name));\n      case 'name-desc':\n        return sortedProducts.sort((a, b) => b.name.localeCompare(a.name));\n      default:\n        return sortedProducts;\n    }\n  };\n\n  const handleReset = () => {\n    setFilter({\n      category: '',\n      stock: true\n    });\n    setSortBy('name-asc');\n  };\n\n  const handleAddToCart = (product) => {\n    // Prevent adding out-of-stock products\n    if (product.stock > 0) {\n      addToCart(product);\n      toast.success(\n        <div className=\"flex items-center\">\n          <span className=\"font-medium\">{product.name}</span>\n          <span className=\"ml-2\">added to cart!</span>\n        </div>\n      );\n    }\n  };\n\n  const handleProductClick = (product) => {\n    setSelectedProduct(product);\n  };\n\n  const handleCloseProductDetails = () => {\n    setSelectedProduct(null);\n  };\n\n  const filteredAndSortedProducts = sortProducts(filterProducts(products));\n\n  const indexOfLastProduct = currentPage * itemsPerPage;\n  const indexOfFirstProduct = indexOfLastProduct - itemsPerPage;\n  const currentProducts = filteredAndSortedProducts.slice(indexOfFirstProduct, indexOfLastProduct);\n\n  const totalPages = Math.ceil(filteredAndSortedProducts.length / itemsPerPage);\n\n  const handlePageChange = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Navbar />\n      {/* Header */}\n      <div className=\"bg-green-700 text-white py-16\">\n        <div className=\"max-w-7xl mx-auto px-4\">\n          <h1 className=\"text-4xl font-bold mb-4\">Our Spice Collection</h1>\n          <p className=\"text-lg\">Discover our premium selection of spices from around the world</p>\n        </div>\n      </div>\n\n      {/* Filters and Sort */}\n      <div className=\"max-w-7xl mx-auto px-4 py-8\">\n        <div className=\"bg-white p-6 rounded-lg shadow-md mb-8\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h2 className=\"text-xl font-semibold\">Filters</h2>\n            <button\n              onClick={handleReset}\n              className=\"text-green-600 hover:text-green-700\"\n            >\n              Reset All\n            </button>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            {/* Category Filter */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Category</label>\n              <select\n                value={filter.category}\n                onChange={(e) => setFilter({ ...filter, category: e.target.value })}\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-green-500\"\n              >\n                <option value=\"\">All Categories</option>\n                {categories.map((category) => (\n                  <option key={category} value={category}>{category}</option>\n                ))}\n              </select>\n            </div>\n\n            {/* Stock Filter */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Stock</label>\n              <select\n                value={filter.stock}\n                onChange={(e) => setFilter({ ...filter, stock: e.target.value === 'true' })}\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-green-500\"\n              >\n                <option value=\"true\">In Stock</option>\n                <option value=\"false\">All Products</option>\n              </select>\n            </div>\n\n            {/* Sort Options */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Sort By</label>\n              <select\n                value={sortBy}\n                onChange={(e) => setSortBy(e.target.value)}\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-green-500\"\n              >\n                <option value=\"name-asc\">Name (A-Z)</option>\n                <option value=\"name-desc\">Name (Z-A)</option>\n                <option value=\"price-asc\">Price (Low to High)</option>\n                <option value=\"price-desc\">Price (High to Low)</option>\n              </select>\n            </div>\n          </div>\n        </div>\n\n        {/* Product Grid */}\n        {loading ? (\n          <div className=\"flex justify-center items-center h-64\">\n            <p>Loading products...</p>\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            {currentProducts.map((product) => (\n              <div \n                key={product.id} \n                className=\"bg-white rounded-lg shadow-md p-4 cursor-pointer hover:shadow-lg transition-shadow\"\n                onClick={() => handleProductClick(product)}\n              >\n                {/* Product Image */}\n                <div className=\"relative h-48 w-full\">\n                  <img \n                    src={product.image_url || '/default-product.jpg'} \n                    alt={product.name} \n                    className=\"absolute inset-0 w-full h-full object-cover\"\n                  />\n                </div>\n\n                {/* Product Details */}\n                <div className=\"mt-4\">\n                  <h3 className=\"text-lg font-semibold\">{product.name}</h3>\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-green-600 font-bold\">{formatPrice(product.price)}</span>\n                    <button\n                      onClick={(e) => {\n                        e.stopPropagation(); // Prevent opening modal when adding to cart\n                        handleAddToCart(product);\n                      }}\n                      disabled={product.stock === 0}\n                      className={`px-3 py-1 rounded-md text-sm transition-colors ${\n                        product.stock > 0 \n                          ? 'bg-green-600 text-white hover:bg-green-700' \n                          : 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                      }`}\n                    >\n                      {product.stock > 0 ? 'Add to Cart' : 'Out of Stock'}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {/* Pagination */}\n        {totalPages > 1 && (\n          <div className=\"flex justify-center mt-8\">\n            {Array.from({ length: totalPages }, (_, i) => i + 1).map((pageNumber) => (\n              <button\n                key={pageNumber}\n                onClick={() => handlePageChange(pageNumber)}\n                className={`mx-1 px-4 py-2 rounded-md ${\n                  currentPage === pageNumber \n                    ? 'bg-green-600 text-white' \n                    : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n                }`}\n              >\n                {pageNumber}\n              </button>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Product Details Modal */}\n      {selectedProduct && (\n        <ProductDetailsModal \n          product={selectedProduct}\n          onClose={handleCloseProductDetails}\n          onAddToCart={handleAddToCart}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Products;","export const formatPrice = (price) => {\n  // Format with Indian numbering system and Rupee symbol\n  return new Intl.NumberFormat('en-IN', {\n    style: 'currency',\n    currency: 'INR',\n    maximumFractionDigits: 0,\n  }).format(price);\n}; "],"names":["ProductDetailsModal","_ref","product","onClose","onAddToCart","_jsx","className","children","_jsxs","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","src","image_url","alt","name","description","formatPrice","price","stock","category","disabled","concat","Products","products","setProducts","useState","loading","setLoading","categories","setCategories","filter","setFilter","sortBy","setSortBy","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","selectedProduct","setSelectedProduct","addToCart","useCart","useEffect","async","data","error","supabase","from","select","order","map","cat","console","toast","fetchCategories","fetchProducts","query","gt","eq","handleAddToCart","success","filteredAndSortedProducts","sortedProducts","sort","a","b","localeCompare","sortProducts","filterProducts","indexOfLastProduct","indexOfFirstProduct","currentProducts","slice","totalPages","Math","ceil","length","Navbar","handleReset","value","onChange","e","_objectSpread","target","handleProductClick","stopPropagation","id","Array","_","i","pageNumber","handlePageChange","handleCloseProductDetails","Intl","NumberFormat","style","currency","maximumFractionDigits","format"],"sourceRoot":""}