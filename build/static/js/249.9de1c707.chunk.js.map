{"version":3,"file":"static/js/249.9de1c707.chunk.js","mappings":"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","sources":["components/CheckoutModal.jsx","pages/Cart.jsx","utils/currency.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { useCart } from '../context/CartContext';\nimport { supabase } from '../config/supabase';\nimport { formatPrice } from '../utils/currency';\nimport toast from 'react-hot-toast';\nimport { useNavigate } from 'react-router-dom';\n\nconst CheckoutModal = ({ isOpen, onClose }) => {\n  const { user } = useAuth();\n  const { cart, getCartTotal, clearCart } = useCart();\n  const [loading, setLoading] = useState(false);\n  const [orderSuccess, setOrderSuccess] = useState(false);\n  const [orderDetails, setOrderDetails] = useState(null);\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    address: user?.user_metadata?.address || '',\n    city: user?.user_metadata?.city || '',\n    pincode: user?.user_metadata?.pincode || '',\n    mobile: user?.user_metadata?.mobile || ''\n  });\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const validateForm = () => {\n    if (!formData.address.trim()) {\n      toast.error('Please enter your shipping address');\n      return false;\n    }\n    if (!formData.city.trim()) {\n      toast.error('Please enter your city');\n      return false;\n    }\n    if (!/^\\d{6}$/.test(formData.pincode)) {\n      toast.error('Please enter a valid 6-digit pincode');\n      return false;\n    }\n    if (!/^[0-9]{10}$/.test(formData.mobile)) {\n      toast.error('Please enter a valid 10-digit mobile number');\n      return false;\n    }\n    return true;\n  };\n\n  const handleCheckout = async (e) => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    if (cart.length === 0) {\n      toast.error('Your cart is empty');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      // Comprehensive stock validation\n      const stockValidationResults = await Promise.all(\n        cart.map(async (item) => {\n          // Fetch product with detailed error logging\n          const { data: product, error: productError } = await supabase\n            .from('products')\n            .select('id, name, stock, price')\n            .eq('id', item.id)\n            .single();\n\n          console.log('Product Fetch Result:', { \n            productId: item.id, \n            product, \n            requestedQuantity: item.quantity,\n            productError \n          });\n\n          if (productError) {\n            console.error(`Error fetching product ${item.id}:`, productError);\n            toast.error(`Error checking product ${item.name}`);\n            return { valid: false, item, error: productError };\n          }\n\n          if (!product) {\n            toast.error(`Product ${item.name} not found`);\n            return { valid: false, item, error: 'Product not found' };\n          }\n\n          if (product.stock < item.quantity) {\n            toast.error(`Insufficient stock for ${product.name}. Only ${product.stock} available.`);\n            return { \n              valid: false, \n              item, \n              error: `Insufficient stock. Only ${product.stock} available.` \n            };\n          }\n\n          return { valid: true, item, product };\n        })\n      );\n\n      // Check validation results\n      const invalidItems = stockValidationResults.filter(result => !result.valid);\n      if (invalidItems.length > 0) {\n        setLoading(false);\n        return;\n      }\n\n      // Create order\n      const { data: order, error: orderError } = await supabase\n        .from('orders')\n        .insert({\n          user_id: user.id,\n          total_amount: getCartTotal(),\n          shipping_address: formData.address,\n          city: formData.city,\n          pincode: formData.pincode,\n          mobile: formData.mobile,\n          status: 'processing'\n        })\n        .select()\n        .single();\n\n      if (orderError) {\n        console.error('Order creation error:', orderError);\n        toast.error('Failed to create order');\n        setLoading(false);\n        return;\n      }\n\n      // Prepare order items and stock updates\n      const orderItemsToInsert = cart.map(item => ({\n        order_id: order.id,\n        product_id: item.id,\n        quantity: item.quantity,\n        price: item.price\n      }));\n\n      // Batch stock update with detailed logging\n      const stockUpdateResults = await Promise.all(\n        cart.map(async (item) => {\n          console.log(`Attempting to decrement stock for product ${item.id}, quantity: ${item.quantity}`);\n          \n          const { data, error } = await supabase.rpc('decrement_product_stock', {\n            product_id: item.id,\n            quantity_to_subtract: item.quantity\n          });\n\n          console.log('Stock Update Result:', { \n            productId: item.id, \n            productName: item.name,\n            stockUpdateSuccessful: data === true,\n            error \n          });\n\n          return {\n            productId: item.id,\n            productName: item.name,\n            stockUpdateSuccessful: data === true,\n            error\n          };\n        })\n      );\n\n      // Check for stock update failures\n      const failedStockUpdates = stockUpdateResults.filter(result => !result.stockUpdateSuccessful);\n      \n      if (failedStockUpdates.length > 0) {\n        // Rollback order creation\n        await supabase.from('orders').delete().eq('id', order.id);\n\n        // Detailed error message\n        const failedProductNames = failedStockUpdates.map(result => result.productName).join(', ');\n        console.error('Stock Update Failures:', failedStockUpdates);\n        toast.error(`Stock update failed for: ${failedProductNames}`);\n        \n        setLoading(false);\n        return;\n      }\n\n      // Insert order items\n      const { error: orderItemsError } = await supabase\n        .from('order_items')\n        .insert(orderItemsToInsert);\n\n      if (orderItemsError) {\n        console.error('Order items creation error:', orderItemsError);\n        toast.error('Failed to create order items');\n        setLoading(false);\n        return;\n      }\n\n      // Clear cart and close modal\n      clearCart();\n      onClose();\n      toast.success('Order placed successfully!');\n    } catch (error) {\n      console.error('Comprehensive checkout error:', error);\n      toast.error('An unexpected error occurred during checkout');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!isOpen) return null;\n\n  if (orderSuccess && orderDetails) {\n    return (\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center\">\n        <div className=\"bg-white rounded-lg p-8 max-w-md w-full mx-4\">\n          <div className=\"text-center mb-6\">\n            <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <svg className=\"w-8 h-8 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n              </svg>\n            </div>\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Order Placed Successfully!</h2>\n            <p className=\"text-gray-600\">Order ID: #{orderDetails.orderId}</p>\n          </div>\n          \n          <div className=\"mb-6\">\n            <h3 className=\"font-semibold mb-2\">Order Summary</h3>\n            <div className=\"space-y-2\">\n              {orderDetails.items.map(item => (\n                <div key={item.id} className=\"flex justify-between text-sm\">\n                  <span>{item.name} × {item.quantity}</span>\n                  <span>{formatPrice(item.price * item.quantity)}</span>\n                </div>\n              ))}\n              <div className=\"border-t pt-2 font-bold\">\n                <div className=\"flex justify-between\">\n                  <span>Total:</span>\n                  <span>{formatPrice(orderDetails.total)}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"mb-6\">\n            <h3 className=\"font-semibold mb-2\">Shipping Details</h3>\n            <div className=\"text-sm text-gray-600\">\n              <p>{orderDetails.shipping.address}</p>\n              <p>{orderDetails.shipping.city} - {orderDetails.shipping.pincode}</p>\n              <p>Mobile: {orderDetails.shipping.mobile}</p>\n            </div>\n          </div>\n          \n          <div className=\"space-y-3\">\n            <button\n              onClick={() => navigate('/products')}\n              className=\"w-full bg-green-600 text-white py-2 rounded hover:bg-green-700 transition duration-300\"\n            >\n              Continue Shopping\n            </button>\n            <button\n              onClick={onClose}\n              className=\"w-full border border-gray-300 text-gray-700 py-2 rounded hover:bg-gray-50 transition duration-300\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center\">\n      <div className=\"bg-white rounded-lg p-8 max-w-md w-full mx-4\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"text-2xl font-bold\">Checkout</h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-500 hover:text-gray-700\"\n          >\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n\n        <div className=\"mb-6\">\n          <h3 className=\"font-semibold mb-2\">Order Summary</h3>\n          <div className=\"space-y-2\">\n            {cart.map(item => (\n              <div key={item.id} className=\"flex justify-between\">\n                <span>{item.name} × {item.quantity}</span>\n                <span>{formatPrice(item.price * item.quantity)}</span>\n              </div>\n            ))}\n            <div className=\"border-t pt-2 font-bold\">\n              <div className=\"flex justify-between\">\n                <span>Total:</span>\n                <span>{formatPrice(getCartTotal())}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <form onSubmit={handleCheckout} className=\"space-y-4\">\n          <div>\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n              Mobile Number\n            </label>\n            <input\n              type=\"tel\"\n              name=\"mobile\"\n              value={formData.mobile}\n              onChange={handleChange}\n              className=\"w-full p-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-green-500\"\n              pattern=\"[0-9]{10}\"\n              placeholder=\"Enter 10-digit mobile number\"\n              required\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n              Shipping Address\n            </label>\n            <textarea\n              name=\"address\"\n              value={formData.address}\n              onChange={handleChange}\n              className=\"w-full p-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-green-500\"\n              rows=\"3\"\n              required\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n              City\n            </label>\n            <input\n              type=\"text\"\n              name=\"city\"\n              value={formData.city}\n              onChange={handleChange}\n              className=\"w-full p-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-green-500\"\n              required\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n              Pincode\n            </label>\n            <input\n              type=\"text\"\n              name=\"pincode\"\n              value={formData.pincode}\n              onChange={handleChange}\n              className=\"w-full p-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-green-500\"\n              pattern=\"[0-9]{6}\"\n              required\n            />\n          </div>\n\n          <button\n            type=\"submit\"\n            className=\"w-full bg-green-600 text-white py-2 rounded hover:bg-green-700 transition duration-300 disabled:opacity-50\"\n            disabled={loading}\n          >\n            {loading ? (\n              <span className=\"flex items-center justify-center\">\n                <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                Processing...\n              </span>\n            ) : `Place Order (${formatPrice(getCartTotal())})`}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default CheckoutModal; ","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useCart } from '../context/CartContext';\r\nimport { formatPrice } from '../utils/currency';\r\nimport Navbar from '../components/Navbar';\r\nimport CheckoutModal from '../components/CheckoutModal';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst Cart = () => {\r\n  const { cart, removeFromCart, updateQuantity, getCartTotal } = useCart();\r\n  const [showCheckoutModal, setShowCheckoutModal] = useState(false);\r\n  const { user } = useAuth();\r\n\r\n  if (cart.length === 0) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50\">\r\n        <Navbar />\r\n        <div className=\"max-w-7xl mx-auto px-4 py-16\">\r\n          <div className=\"text-center\">\r\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">Your Cart is Empty</h2>\r\n            <p className=\"text-gray-600 mb-8\">Add some spices to your cart and come back!</p>\r\n            <Link\r\n              to=\"/products\"\r\n              className=\"inline-block bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 transition duration-300\"\r\n            >\r\n              Continue Shopping\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <Navbar />\r\n      <div className=\"max-w-7xl mx-auto px-4 py-16\">\r\n        <h2 className=\"text-3xl font-bold text-gray-900 mb-8\">Shopping Cart</h2>\r\n        \r\n        <div className=\"grid md:grid-cols-3 gap-8\">\r\n          {/* Cart Items */}\r\n          <div className=\"md:col-span-2\">\r\n            <div className=\"bg-white rounded-lg shadow-md\">\r\n              {cart.map((item) => (\r\n                <div \r\n                  key={item.id}\r\n                  className=\"flex items-center p-6 border-b border-gray-200 last:border-b-0\"\r\n                >\r\n                  <img\r\n                    src={item.image_url}\r\n                    alt={item.name}\r\n                    className=\"w-24 h-24 object-cover rounded\"\r\n                  />\r\n                  <div className=\"flex-1 ml-6\">\r\n                    <h3 className=\"text-lg font-semibold\">{item.name}</h3>\r\n                    <p className=\"text-gray-600 text-sm mb-2\">{item.origin}</p>\r\n                    <div className=\"flex items-center\">\r\n                      <span className=\"text-green-600 font-bold\">\r\n                        {formatPrice(item.price)}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex items-center ml-6\">\r\n                    <div className=\"flex items-center border border-gray-300 rounded\">\r\n                      <button\r\n                        onClick={() => updateQuantity(item.id, item.quantity - 1)}\r\n                        className=\"px-3 py-1 hover:bg-gray-100\"\r\n                        disabled={item.quantity <= 1}\r\n                      >\r\n                        -\r\n                      </button>\r\n                      <span className=\"px-3 py-1 border-x border-gray-300\">\r\n                        {item.quantity}\r\n                      </span>\r\n                      <button\r\n                        onClick={() => updateQuantity(item.id, item.quantity + 1)}\r\n                        className=\"px-3 py-1 hover:bg-gray-100\"\r\n                      >\r\n                        +\r\n                      </button>\r\n                    </div>\r\n                    <button\r\n                      onClick={() => removeFromCart(item.id)}\r\n                      className=\"ml-4 text-red-500 hover:text-red-700\"\r\n                    >\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n                      </svg>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Order Summary */}\r\n          <div className=\"md:col-span-1\">\r\n            <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n              <h3 className=\"text-lg font-semibold mb-4\">Order Summary</h3>\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex justify-between text-base font-medium text-gray-900\">\r\n                  <p>Subtotal</p>\r\n                  <p>{formatPrice(getCartTotal())}</p>\r\n                </div>\r\n                <div className=\"flex justify-between text-base font-medium text-gray-900\">\r\n                  <p>Shipping</p>\r\n                  <p>Free</p>\r\n                </div>\r\n                <div className=\"border-t border-gray-200 pt-4\">\r\n                  <div className=\"flex justify-between text-lg font-bold\">\r\n                    <p>Total</p>\r\n                    <p>{formatPrice(getCartTotal())}</p>\r\n                  </div>\r\n                </div>\r\n                <button\r\n                  className=\"w-full bg-green-600 text-white py-3 rounded-lg hover:bg-green-700 transition duration-300\"\r\n                  onClick={() => {\r\n                    if (!user) {\r\n                      toast.error('Please login to checkout');\r\n                      return;\r\n                    }\r\n                    setShowCheckoutModal(true);\r\n                  }}\r\n                >\r\n                  Proceed to Checkout\r\n                </button>\r\n                <Link\r\n                  to=\"/products\"\r\n                  className=\"block text-center text-green-600 hover:text-green-700\"\r\n                >\r\n                  Continue Shopping\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <CheckoutModal \r\n        isOpen={showCheckoutModal}\r\n        onClose={() => setShowCheckoutModal(false)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart; ","export const formatPrice = (price) => {\n  // Format with Indian numbering system and Rupee symbol\n  return new Intl.NumberFormat('en-IN', {\n    style: 'currency',\n    currency: 'INR',\n    maximumFractionDigits: 0,\n  }).format(price);\n}; "],"names":["_ref","_user$user_metadata","_user$user_metadata2","_user$user_metadata3","_user$user_metadata4","isOpen","onClose","user","useAuth","cart","getCartTotal","clearCart","useCart","loading","setLoading","useState","orderSuccess","setOrderSuccess","orderDetails","setOrderDetails","navigate","useNavigate","formData","setFormData","address","user_metadata","city","pincode","mobile","handleChange","e","_objectSpread","target","name","value","_jsx","className","children","_jsxs","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","orderId","items","map","item","quantity","formatPrice","price","id","total","shipping","onClick","onSubmit","async","preventDefault","trim","test","toast","error","length","stockValidationResults","Promise","all","data","product","productError","supabase","from","select","eq","single","console","log","productId","requestedQuantity","concat","valid","stock","filter","result","order","orderError","insert","user_id","total_amount","shipping_address","status","orderItemsToInsert","order_id","product_id","failedStockUpdates","rpc","quantity_to_subtract","productName","stockUpdateSuccessful","delete","failedProductNames","join","orderItemsError","success","type","onChange","pattern","placeholder","required","rows","disabled","xmlns","cx","cy","r","Cart","removeFromCart","updateQuantity","showCheckoutModal","setShowCheckoutModal","Navbar","Link","to","src","image_url","alt","origin","CheckoutModal","Intl","NumberFormat","style","currency","maximumFractionDigits","format"],"sourceRoot":""}