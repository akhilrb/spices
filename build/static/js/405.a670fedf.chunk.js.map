{"version":3,"file":"static/js/405.a670fedf.chunk.js","mappings":"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","sources":["components/admin/AdminLayout.jsx","pages/admin/Dashboard.jsx","utils/currency.js"],"sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst AdminLayout = ({ children }) => {\n  const location = useLocation();\n\n  const navItems = [\n    {\n      path: '/admin',\n      name: 'Dashboard',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" />\n        </svg>\n      )\n    },\n    {\n      path: '/admin/orders',\n      name: 'Orders',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z\" />\n        </svg>\n      )\n    },\n    {\n      path: '/admin/products',\n      name: 'Products',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\" />\n        </svg>\n      )\n    },\n    {\n      path: '/admin/users',\n      name: 'Users',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z\" />\n        </svg>\n      )\n    },\n    {\n      path: '/admin/sales-dashboard',\n      name: 'Sales Dashboard',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 11V7a4 4 0 118 0v4m-1 4h-6m6 0a2 2 0 11-4 0m4 0a2 2 0 11-4 0m-4 0H5m6 0a2 2 0 11-4 0m4 0a2 2 0 11-4 0\" />\n        </svg>\n      )\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 flex\">\n      {/* Sidebar */}\n      <div className=\"w-64 bg-white shadow-lg\">\n        <div className=\"h-16 bg-green-700 flex items-center px-6\">\n          <span className=\"text-white text-lg font-semibold\">Admin Panel</span>\n        </div>\n        <nav className=\"mt-6\">\n          {navItems.map((item) => (\n            <Link\n              key={item.path}\n              to={item.path}\n              className={`flex items-center px-6 py-3 text-gray-700 hover:bg-gray-100 ${\n                location.pathname === item.path ? 'bg-gray-100 border-r-4 border-green-700' : ''\n              }`}\n            >\n              {item.icon}\n              <span className=\"mx-3\">{item.name}</span>\n            </Link>\n          ))}\n          <Link\n            to=\"/\"\n            className=\"flex items-center px-6 py-3 text-gray-700 hover:bg-gray-100 mt-4\"\n          >\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n            </svg>\n            <span className=\"mx-3\">Back to Site</span>\n          </Link>\n        </nav>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"flex-1\">\n        {/* Top Navigation */}\n        <div className=\"bg-white shadow-sm h-16 flex items-center px-8\">\n          <div className=\"flex-1\"></div>\n          <div className=\"flex items-center space-x-4\">\n            <span className=\"text-gray-700\">Admin</span>\n          </div>\n        </div>\n\n        {/* Page Content */}\n        <div className=\"p-8\">\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminLayout; ","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { supabase } from '../../config/supabase';\nimport { formatPrice } from '../../utils/currency';\nimport toast from 'react-hot-toast';\nimport AdminLayout from '../../components/admin/AdminLayout';\n\nconst AdminDashboard = () => {\n  const [stats, setStats] = useState({\n    totalOrders: 0,\n    pendingOrders: 0,\n    totalProducts: 0,\n    totalRevenue: 0\n  });\n  const [recentOrders, setRecentOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchDashboardData();\n  }, []);\n\n  const fetchDashboardData = async () => {\n    try {\n      setLoading(true);\n      \n      // Fetch stats\n      const { data: orders, error: ordersError } = await supabase\n        .from('orders')\n        .select('*');\n      \n      if (ordersError) throw ordersError;\n\n      const { data: products, error: productsError } = await supabase\n        .from('products')\n        .select('*');\n      \n      if (productsError) throw productsError;\n\n      // Calculate stats\n      const totalOrders = orders.length;\n      const pendingOrders = orders.filter(order => order.status === 'pending').length;\n      const totalRevenue = orders\n        .filter(order => order.status === 'Delivered')\n        .reduce((sum, order) => sum + (order.total_amount || 0), 0);\n\n      setStats({\n        totalOrders,\n        pendingOrders,\n        totalProducts: products.length,\n        totalRevenue\n      });\n\n      // Fetch recent orders with details\n      const { data: recentOrdersData, error: recentError } = await supabase\n        .from('orders')\n        .select(`\n          *,\n          order_items (\n            quantity,\n            price,\n            products (\n              name\n            )\n          )\n        `)\n        .order('created_at', { ascending: false })\n        .limit(5);\n\n      if (recentError) throw recentError;\n      setRecentOrders(recentOrdersData);\n\n    } catch (error) {\n      console.error('Error fetching dashboard data:', error);\n      toast.error('Failed to load dashboard data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateOrderStatus = async (orderId, newStatus) => {\n    try {\n      const { error } = await supabase\n        .from('orders')\n        .update({ status: newStatus })\n        .eq('id', orderId);\n\n      if (error) throw error;\n\n      setRecentOrders(orders =>\n        orders.map(order =>\n          order.id === orderId\n            ? { ...order, status: newStatus }\n            : order\n        )\n      );\n\n      toast.success(`Order status updated to ${newStatus}`);\n    } catch (error) {\n      console.error('Error updating order status:', error);\n      toast.error('Failed to update order status');\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-100 p-6\">\n        <div className=\"flex justify-center items-center h-full\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-green-700\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <AdminLayout>\n      <div className=\"min-h-screen bg-gray-100\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"mb-8\">\n            <h1 className=\"text-3xl font-bold text-gray-900\">Admin Dashboard</h1>\n          </div>\n\n          {/* Stats Grid */}\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <h3 className=\"text-gray-500 text-sm font-medium\">Total Orders</h3>\n              <p className=\"text-3xl font-bold text-gray-900\">{stats.totalOrders}</p>\n            </div>\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <h3 className=\"text-gray-500 text-sm font-medium\">Pending Orders</h3>\n              <p className=\"text-3xl font-bold text-yellow-600\">{stats.pendingOrders}</p>\n            </div>\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <h3 className=\"text-gray-500 text-sm font-medium\">Total Products</h3>\n              <p className=\"text-3xl font-bold text-gray-900\">{stats.totalProducts}</p>\n            </div>\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <h3 className=\"text-gray-500 text-sm font-medium\">Total Revenue</h3>\n              <p className=\"text-3xl font-bold text-green-600\">{formatPrice(stats.totalRevenue)}</p>\n            </div>\n          </div>\n\n          {/* Quick Actions */}\n          <div className=\"mb-8\">\n            <div className=\"flex space-x-4\">\n              <Link\n                to=\"/admin/products\"\n                className=\"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\"\n              >\n                Manage Products\n              </Link>\n              <Link\n                to=\"/admin/orders\"\n                className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n              >\n                View All Orders\n              </Link>\n            </div>\n          </div>\n\n          {/* Recent Orders */}\n          <div className=\"bg-white rounded-lg shadow\">\n            <div className=\"px-6 py-4 border-b border-gray-200\">\n              <h2 className=\"text-xl font-semibold text-gray-800\">Recent Orders</h2>\n            </div>\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Order ID\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Date\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Customer\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Amount\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Status\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Actions\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {recentOrders.map((order) => (\n                    <tr key={order.id}>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                        #{order.id.slice(0, 8)}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {new Date(order.created_at).toLocaleDateString()}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {order.shipping_address}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                        {formatPrice(order.total_amount)}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full\n                          ${order.status === 'pending' ? 'bg-yellow-100 text-yellow-800' : ''}\n                          ${order.status === 'processing' ? 'bg-blue-100 text-blue-800' : ''}\n                          ${order.status === 'shipped' ? 'bg-green-100 text-green-800' : ''}\n                          ${order.status === 'delivered' ? 'bg-green-100 text-green-800' : ''}\n                          ${order.status === 'cancelled' ? 'bg-red-100 text-red-800' : ''}\n                        `}>\n                          {order.status.charAt(0).toUpperCase() + order.status.slice(1)}\n                        </span>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                        <select\n                          className=\"text-sm border-gray-300 rounded-md\"\n                          value={order.status}\n                          onChange={(e) => updateOrderStatus(order.id, e.target.value)}\n                        >\n                          <option value=\"pending\">Pending</option>\n                          <option value=\"processing\">Processing</option>\n                          <option value=\"shipped\">Shipped</option>\n                          <option value=\"delivered\">Delivered</option>\n                          <option value=\"cancelled\">Cancelled</option>\n                        </select>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </AdminLayout>\n  );\n};\n\nexport default AdminDashboard; ","export const formatPrice = (price) => {\n  // Format with Indian numbering system and Rupee symbol\n  return new Intl.NumberFormat('en-IN', {\n    style: 'currency',\n    currency: 'INR',\n    maximumFractionDigits: 0,\n  }).format(price);\n}; "],"names":["_ref","children","location","useLocation","navItems","path","name","icon","_jsx","className","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","_jsxs","map","item","Link","to","concat","pathname","AdminDashboard","stats","setStats","useState","totalOrders","pendingOrders","totalProducts","totalRevenue","recentOrders","setRecentOrders","loading","setLoading","useEffect","fetchDashboardData","async","data","orders","error","ordersError","supabase","from","select","products","productsError","length","filter","order","status","reduce","sum","total_amount","recentOrdersData","recentError","ascending","limit","console","toast","AdminLayout","formatPrice","id","slice","Date","created_at","toLocaleDateString","shipping_address","charAt","toUpperCase","value","onChange","e","orderId","newStatus","update","eq","_objectSpread","success","updateOrderStatus","target","price","Intl","NumberFormat","style","currency","maximumFractionDigits","format"],"sourceRoot":""}